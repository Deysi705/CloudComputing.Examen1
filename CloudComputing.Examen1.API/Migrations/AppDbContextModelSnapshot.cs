// <auto-generated />
using System;
using CloudComputing.Examen1.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CloudComputing.Examen1.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CloudComputingExamen1.Models.Certificados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cuerpo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlPdf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventosId");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Espacios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Espacios");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Eventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PonentesId")
                        .HasColumnType("int");

                    b.Property<int>("TipoEventosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEventosId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.EventosPonentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventosId")
                        .HasColumnType("int");

                    b.Property<int>("PonentesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventosId");

                    b.HasIndex("PonentesId");

                    b.ToTable("EventosPonentes");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.HistoricoCertificados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Certificado")
                        .HasColumnType("int");

                    b.Property<int>("Evento")
                        .HasColumnType("int");

                    b.Property<int>("EventosId")
                        .HasColumnType("int");

                    b.Property<int>("Pago")
                        .HasColumnType("int");

                    b.Property<int>("Participante")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventosId");

                    b.ToTable("HistoricoCertificados");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Inscripciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParticipantesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventosId");

                    b.HasIndex("ParticipantesId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.MediosPagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MediosPagos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Pagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoTransaccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("InscripcionesId")
                        .HasColumnType("int");

                    b.Property<int>("MediosPagosId")
                        .HasColumnType("int");

                    b.Property<int>("Monto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionesId");

                    b.HasIndex("MediosPagosId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Participantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Ponentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correoelectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Sesiones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EspaciosId")
                        .HasColumnType("int");

                    b.Property<int>("EventosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EspaciosId");

                    b.HasIndex("EventosId");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.TipoEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEventos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Certificados", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.Eventos", "Eventos")
                        .WithMany("Certificados")
                        .HasForeignKey("EventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Eventos", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.TipoEventos", "TipoEventos")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoEventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEventos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.EventosPonentes", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.Eventos", "Eventos")
                        .WithMany("EventosPonentes")
                        .HasForeignKey("EventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudComputingExamen1.Models.Ponentes", "Ponentes")
                        .WithMany("EventosPonentes")
                        .HasForeignKey("PonentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Ponentes");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.HistoricoCertificados", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.Eventos", "Eventos")
                        .WithMany("HistoricoCertificados")
                        .HasForeignKey("EventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Inscripciones", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.Eventos", "Eventos")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EventosId");

                    b.HasOne("CloudComputingExamen1.Models.Participantes", "Participantes")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ParticipantesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Pagos", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.Inscripciones", "Inscripciones")
                        .WithMany("Pagos")
                        .HasForeignKey("InscripcionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudComputingExamen1.Models.MediosPagos", "MediosPagos")
                        .WithMany("Pagos")
                        .HasForeignKey("MediosPagosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripciones");

                    b.Navigation("MediosPagos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Sesiones", b =>
                {
                    b.HasOne("CloudComputingExamen1.Models.Espacios", "Espacios")
                        .WithMany("Sesiones")
                        .HasForeignKey("EspaciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudComputingExamen1.Models.Eventos", "Eventos")
                        .WithMany("Sesiones")
                        .HasForeignKey("EventosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Espacios");

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Espacios", b =>
                {
                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Eventos", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("EventosPonentes");

                    b.Navigation("HistoricoCertificados");

                    b.Navigation("Inscripciones");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Inscripciones", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.MediosPagos", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Participantes", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.Ponentes", b =>
                {
                    b.Navigation("EventosPonentes");
                });

            modelBuilder.Entity("CloudComputingExamen1.Models.TipoEventos", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
